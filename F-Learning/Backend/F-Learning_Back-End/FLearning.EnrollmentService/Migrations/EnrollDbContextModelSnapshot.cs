// <auto-generated />
using System;
using FLearning.EnrollmentService.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FLearning.EnrollmentService.Migrations
{
    [DbContext(typeof(EnrollDbContext))]
    partial class EnrollDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FLearning.EnrollmentService.Models.CourseProgress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("LastAccessed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("last_accessed")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal?>("ProgressPercentage")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("progress_percentage");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PK__course_p__3213E83F022232C9");

                    b.HasIndex("StudentId");

                    b.ToTable("course_progress", (string)null);
                });

            modelBuilder.Entity("FLearning.EnrollmentService.Models.Enrollment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnName("course_id");

                    b.Property<DateTime?>("EnrolledDate")
                        .HasColumnType("datetime")
                        .HasColumnName("enrolled_date");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("student_id");

                    b.HasKey("Id")
                        .HasName("PK__enrollme__3213E83F420A6D34");

                    b.HasIndex("StudentId");

                    b.ToTable("enrollments", (string)null);
                });

            modelBuilder.Entity("FLearning.EnrollmentService.Models.Student", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("CompletedCourses")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("completed_courses");

                    b.Property<DateTime?>("EnrolledAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("enrolled_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("TotalCoursesEnrolled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("total_courses_enrolled");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__students__3213E83F2AB97E7D");

                    b.HasIndex(new[] { "UserId" }, "UQ__students__B9BE370E2550203D")
                        .IsUnique();

                    b.ToTable("students", (string)null);
                });

            modelBuilder.Entity("FLearning.EnrollmentService.Models.CourseProgress", b =>
                {
                    b.HasOne("FLearning.EnrollmentService.Models.Student", "Student")
                        .WithMany("CourseProgresses")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__course_pr__stude__33D4B598");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FLearning.EnrollmentService.Models.Enrollment", b =>
                {
                    b.HasOne("FLearning.EnrollmentService.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .IsRequired()
                        .HasConstraintName("FK__enrollmen__stude__2E1BDC42");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("FLearning.EnrollmentService.Models.Student", b =>
                {
                    b.Navigation("CourseProgresses");

                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
